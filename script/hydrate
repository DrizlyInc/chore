#!/usr/bin/env ruby
require 'rubygems'
require 'json'
require 'aws-sdk'

$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'optparse'
require 'chore'

opts = {}
@parser = OptionParser.new do |o|
   o.on "-q", "--queue QUEUE1,QUEUE2", "Name of queue to populate" do |arg|
    opts[:queue] = arg
  end

  o.on "-v", "--verbose", "Print more verbose output" do
    ## TODO(add a logger)
  end

  o.on '--aws-access-key KEY', 'Valid AWS Access Key' do |arg|
    opts[:aws_access_key] = arg
  end

  o.on '--aws-secret-key KEY', 'Valid AWS Secret Key' do |arg|
    opts[:aws_secret_key] = arg
  end
end
@parser.banner = "hydrate [options]"

@parser.on_tail "-h", "--help", "Show help" do
  puts @parser
  exit 1
end

@parser.parse!(ARGV)

REQUIRED_OPTS=[:aws_secret_key,:aws_access_key,:queue]

REQUIRED_OPTS.each{ |o| raise OptionParser::MissingArgument.new(o) if opts[o].nil? }

AWS.config(
  :access_key_id => opts[:aws_access_key],
  :secret_access_key => opts[:aws_secret_key])

SQS = AWS::SQS.new

test_queue = SQS.queues.create(opts[:queue])

until test_queue.exists? do
  sleep 0.3
end
threads = []
10.times do |x|
  threads << Thread.new(x) do |n|
    10.times {|i| test_queue.send_message({:class => 'TestJob', :args => [1,2,"3"]}.to_json); puts "Wrote #{n * i} message" }
  end
end

threads.each(&:join)
